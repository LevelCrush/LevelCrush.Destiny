{
  "db_name": "SQLite",
  "query": "WITH\ntarget_members AS (\n    SELECT\n        members.*\n    FROM clans\n    INNER JOIN clan_members ON clans.group_id = clan_members.group_id\n    INNER JOIN members ON clan_members.membership_id = members.membership_id\n    WHERE clans.is_network = 1\n),\ntarget_activities AS\n(\n   SELECT\n       member_activities.instance_id,\n       member_activities.membership_id\n   FROM target_members\n   INNER JOIN member_activities ON target_members.membership_id = member_activities.membership_id\n   WHERE member_activities.mode = 4 /*raids */\n   GROUP BY member_activities.instance_id, member_activities.membership_id\n),\ntarget_activities_with_durations AS\n(\n    SELECT\n        target_activities.instance_id,\n        target_activities.membership_id,\n        MAX(member_activity_stats.value) AS activityDurationSeconds\n    FROM target_activities\n    INNER JOIN member_activity_stats ON\n           target_activities.instance_id = member_activity_stats.instance_id AND\n           target_activities.membership_id = member_activity_stats.membership_id  AND\n           member_activity_stats.name = 'activityDurationSeconds'\n    GROUP BY target_activities.instance_id, target_activities.membership_id\n),\nfull_clear_activities AS\n(\n    SELECT\n        instances.instance_id,\n        target_activities_with_durations.membership_id\n    FROM target_activities_with_durations\n    INNER JOIN instances ON target_activities_with_durations.instance_id = instances.instance_id\n    INNER JOIN instance_members ON\n        target_activities_with_durations.membership_id = instance_members.membership_id AND\n        target_activities_with_durations.instance_id = instance_members.instance_id\n    WHERE instance_members.completed = 1\n    AND instances.completed = 1\n    AND (\n        /* \n        any activity before beyond light **may** have a starting phase index set. In our system if they came in with a starting phase index or not does not matter\n        we default to 0 if there is none present. So starting phase index = 0 equals the start of an activity (the beginning)\n        unless there is somewhere in the documentation that says otherwise (this is an assumption, could not find any additional info in documentation) */\n        (instances.occurred_at <= 1605045600 AND instances.starting_phase_index = 0) OR\n        /*\n        any instance that occurred after beyond light, will not have a starting phase index. So it is effectively 0 always no point in including it\n        any activity between now and witch queen release **should** not have a starting_from_beginnning field populated so that will equal 0.\n        this is according to bungie documentation. */\n        (instances.occurred_at >= 1605045600 AND instances.occurred_at <= 1645567200) OR\n        (instances.occurred_at >= 1645567200 AND instances.started_from_beginning = 1)\n    )\n    AND target_activities_with_durations.activityDurationSeconds > 720 /* only accept if they are longer then 12 minutes long */\n    GROUP BY instances.instance_id, target_activities_with_durations.membership_id\n),\n\nleaderboard AS (\n    SELECT\n        target_members.display_name_global AS display_name,\n        COUNT(DISTINCT full_clear_activities.instance_id) AS amount\n    FROM target_members\n    LEFT JOIN full_clear_activities ON target_members.membership_id = full_clear_activities.membership_id\n    GROUP BY target_members.display_name_global, target_members.membership_id\n),\nleaderboard_standings AS (\n    SELECT\n        leaderboard.display_name,\n        leaderboard.amount,\n        (RANK() OVER w) AS `standing`,\n        (PERCENT_RANK() OVER w) * 100 AS `percent_ranking`\n    FROM leaderboard\n    WINDOW w AS (ORDER BY leaderboard.amount DESC)\n)\n\n/* normalize expected output */\nSELECT\n    leaderboard_standings.display_name,\n    leaderboard_standings.amount + 0.0 AS amount, /* this seems silly, but is required for BigDecimal to be mapped as our uniform type */\n    leaderboard_standings.standing,\n    leaderboard_standings.percent_ranking\nFROM leaderboard_standings\nWHERE leaderboard_standings.display_name  = ?",
  "describe": {
    "columns": [
      {
        "name": "display_name",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "amount",
        "ordinal": 1,
        "type_info": "Float"
      },
      {
        "name": "standing",
        "ordinal": 2,
        "type_info": "Int64"
      },
      {
        "name": "percent_ranking",
        "ordinal": 3,
        "type_info": "Int"
      }
    ],
    "parameters": {
      "Right": 1
    },
    "nullable": [
      false,
      false,
      false,
      false
    ]
  },
  "hash": "4bc152058a468a84bc31406f8c5a46054eefd0195efe9e81bb4f3c066bd564f8"
}
