{
  "db_name": "SQLite",
  "query": "create table if not exists clan_members\n(\n    id            integer not null\n        constraint clan_members_pk\n            primary key autoincrement,\n    group_id      integer not null,\n    group_role    integer not null,\n    membership_id integer not null,\n    platform      integer not null,\n    joined_at     integer not null,\n    created_at    integer not null,\n    updated_at    integer not null,\n    deleted_at    integer not null,\n    constraint clan_members_pk2\n        unique (group_id, group_role, membership_id)\n)\n    strict;\n\ncreate index if not exists clan_members_group_id_group_role_index\n    on clan_members (group_id, group_role);\n\ncreate index if not exists clan_members_group_id_index\n    on clan_members (group_id);\n\ncreate index if not exists clan_members_group_role_index\n    on clan_members (group_role);\n\ncreate index if not exists clan_members_joined_at_index\n    on clan_members (joined_at);\n\ncreate index if not exists clan_members_membership_id_index\n    on clan_members (membership_id);\n\ncreate table if not exists clans\n(\n    id         integer not null\n        constraint clans_pk\n            primary key autoincrement,\n    group_id   integer not null\n        constraint clans_pk2\n            unique,\n    name       text    not null,\n    slug       text    not null,\n    is_network integer not null,\n    motto      text    not null,\n    about      text    not null,\n    call_sign  text    not null,\n    created_at integer not null,\n    updated_at integer not null,\n    deleted_at integer not null\n)\n    strict;\n\ncreate index if not exists clans_group_id_index\n    on clans (group_id);\n\ncreate index if not exists clans_is_network_index\n    on clans (is_network);\n\ncreate index if not exists clans_name_index\n    on clans (name);\n\ncreate index if not exists clans_slug_index\n    on clans (slug);\n\ncreate table if not exists instance_members\n(\n    id                integer not null\n        constraint instance_members_pk\n            primary key autoincrement,\n    instance_id       integer not null,\n    membership_id     integer not null,\n    platform          integer not null,\n    character_id      integer not null,\n    class_hash        integer not null,\n    class_name        TEXT    not null,\n    emblem_hash       integer not null,\n    light_level       integer not null,\n    clan_name         TEXT    not null,\n    clan_tag          TEXT    not null,\n    completed         integer not null,\n    completion_reason TEXT not null,\n    created_at        integer not null,\n    updated_at        integer not null,\n    deleted_at        integer not null,\n    constraint instance_members_pk2\n        unique (membership_id, instance_id, character_id)\n)\n    strict;\n\ncreate index if not exists instance_members_character_id_completed_index\n    on instance_members (character_id, completed);\n\ncreate index if not exists instance_members_character_id_index\n    on instance_members (character_id);\n\ncreate index if not exists instance_members_class_hash_index\n    on instance_members (class_hash);\n\ncreate index if not exists instance_members_class_name_completed_index\n    on instance_members (class_name, completed);\n\ncreate index if not exists instance_members_class_name_index\n    on instance_members (class_name);\n\ncreate index if not exists instance_members_completed_index\n    on instance_members (completed);\n\ncreate index if not exists instance_members_completion_reason_index\n    on instance_members (completion_reason);\n\ncreate index if not exists instance_members_emblem_hash_index\n    on instance_members (emblem_hash);\n\ncreate index if not exists instance_members_instance_id_completed_index\n    on instance_members (instance_id, completed);\n\ncreate index if not exists instance_members_instance_id_completed_membership_id_index\n    on instance_members (instance_id, completed, membership_id);\n\ncreate index if not exists instance_members_instance_id_completed_membership_id_index2\n    on instance_members (instance_id, completed, membership_id);\n\ncreate index if not exists instance_members_instance_id_index\n    on instance_members (instance_id);\n\ncreate index if not exists instance_members_membership_id_completed_index\n    on instance_members (membership_id, completed);\n\ncreate index if not exists instance_members_membership_id_index\n    on instance_members (membership_id);\n\ncreate index if not exists instance_members_platform_index\n    on instance_members (platform);\n\ncreate table if not exists instances\n(\n    id                     integer not null\n        constraint instances_pk\n            primary key autoincrement,\n    instance_id            integer not null\n        constraint instances_pk2\n            unique,\n    occurred_at            integer not null,\n    starting_phase_index   integer not null,\n    started_from_beginning integer not null,\n    activity_hash          integer not null,\n    activity_director_hash integer not null,\n    is_private             integer not null,\n    completed              integer not null,\n    completion_reasons     TEXT    not null,\n    created_at             integer not null,\n    updated_at             integer not null,\n    deleted_at             integer not null\n)\n    strict;\n\ncreate index if not exists instances_activity_director_hash_index\n    on instances (activity_director_hash);\n\ncreate index if not exists instances_activity_hash_index\n    on instances (activity_hash);\n\ncreate index if not exists instances_competed_index\n    on instances (completed);\n\ncreate index if not exists instances_completion_reasons_index\n    on instances (completion_reasons);\n\ncreate index if not exists instances_completion_reasons_instance_id_index\n    on instances (completion_reasons, instance_id);\n\ncreate index if not exists instances_instance_id_competed_index\n    on instances (instance_id, completed);\n\ncreate index if not exists instances_instance_id_index\n    on instances (instance_id);\n\ncreate index if not exists instances_instance_id_started_from_beginning_index\n    on instances (instance_id, started_from_beginning);\n\ncreate index if not exists instances_is_private_index\n    on instances (is_private);\n\ncreate index if not exists instances_occurred_at_index\n    on instances (occurred_at);\n\ncreate index if not exists instances_started_from_beginning_index\n    on instances (started_from_beginning);\n\ncreate index if not exists instances_starting_phase_index_index\n    on instances (starting_phase_index);\n\ncreate table if not exists manifest_activities\n(\n    id                     integer not null\n        constraint manifest_activities_pk\n            primary key autoincrement,\n    activity_type          integer not null,\n    name                   TEXT    not null,\n    description            TEXT    not null,\n    hash                   integer not null\n        constraint manifest_activities_pk2\n            unique,\n    \"index\"                integer not null,\n    is_pvp                 integer not null,\n    image_url              TEXT    not null,\n    matchmaking_enabled    integer not null,\n    fireteam_min_size      integer not null,\n    fireteam_max_size      integer not null,\n    max_players            integer not null,\n    requires_guardian_oath integer not null,\n    created_at             integer not null,\n    updated_at             integer not null,\n    deleted_at             integer not null\n)\n    strict;\n\ncreate index if not exists manifest_activities_activity_type_index\n    on manifest_activities (activity_type);\n\ncreate index if not exists manifest_activities_hash_index\n    on manifest_activities (hash);\n\ncreate index if not exists manifest_activities_index_index\n    on manifest_activities (\"index\");\n\ncreate index if not exists manifest_activities_is_pvp_index\n    on manifest_activities (is_pvp);\n\ncreate index if not exists manifest_activities_matchmaking_enabled_index\n    on manifest_activities (matchmaking_enabled);\n\ncreate index if not exists manifest_activities_name_index\n    on manifest_activities (name);\n\ncreate table if not exists manifest_activity_types\n(\n    id          integer not null\n        constraint manifest_activity_types_pk\n            primary key autoincrement,\n    hash        integer not null\n        constraint manifest_activity_types_pk2\n            unique,\n    name        TEXT    not null,\n    description TEXT    not null,\n    icon_url    TEXT    not null,\n    created_at  integer not null,\n    updated_at  integer not null,\n    deleted_at  integer not null,\n    \"index\"     integer not null\n)\n    strict;\n\ncreate table if not exists manifest_classes\n(\n    id         integer not null\n        constraint manifest_classes_pk\n            primary key autoincrement,\n    hash       integer not null\n        constraint manifest_classes_pk2\n            unique,\n    \"index\"    integer not null,\n    type       integer not null,\n    name       TEXT    not null,\n    created_at integer not null,\n    updated_at integer not null,\n    deleted_at integer not null\n)\n    strict;\n\ncreate index if not exists manifest_classes_index_index\n    on manifest_classes (\"index\");\n\ncreate index if not exists manifest_classes_type_index\n    on manifest_classes (type);\n\ncreate table if not exists manifest_seasons\n(\n    id         integer not null\n        constraint manifest_seasons_pk\n            primary key autoincrement,\n    hash       integer not null\n        constraint manifest_seasons_pk2\n            unique,\n    name       text    not null,\n    pass_hash  integer not null,\n    number     integer not null,\n    starts_at  integer not null,\n    ends_at    integer not null,\n    created_at integer not null,\n    updated_at integer not null,\n    deleted_at integer not null\n)\n    strict;\n\ncreate index if not exists manifest_seasons_hash_index\n    on manifest_seasons (hash);\n\ncreate index if not exists manifest_seasons_name_index\n    on manifest_seasons (name);\n\ncreate index if not exists manifest_seasons_number_index\n    on manifest_seasons (number);\n\ncreate table if not exists manifest_triumphs\n(\n    id          integer not null\n        constraint manifest_triumphs_pk\n            primary key autoincrement,\n    hash        integer not null\n        constraint manifest_triumphs_pk2\n            unique,\n    name        TEXT    not null,\n    description TEXT    not null,\n    title       TEXT    not null,\n    is_title    integer not null,\n    gilded      integer not null,\n    created_at  integer not null,\n    updated_at  integer not null,\n    deleted_at  integer not null\n)\n    strict;\n\ncreate index if not exists manifest_triumphs_gilded_index\n    on manifest_triumphs (gilded);\n\ncreate index if not exists manifest_triumphs_hash_index\n    on manifest_triumphs (hash);\n\ncreate index if not exists manifest_triumphs_is_title_index\n    on manifest_triumphs (is_title);\n\ncreate index if not exists manifest_triumphs_name_index\n    on manifest_triumphs (name);\n\ncreate index if not exists manifest_triumphs_title_index\n    on manifest_triumphs (title);\n\ncreate table if not exists member_activities\n(\n    id                     integer not null\n        constraint member_activities_pk\n            primary key autoincrement,\n    membership_id          integer not null,\n    character_id           integer not null,\n    platform_played        integer not null,\n    activity_hash          integer not null,\n    activity_hash_director integer not null,\n    instance_id            integer not null,\n    mode                   integer not null,\n    modes                  TEXT    not null,\n    private                integer not null,\n    occurred_at            integer not null,\n    created_at             integer not null,\n    updated_at             integer not null,\n    deleted_at             integer not null,\n    constraint member_activities_pk2\n        unique (instance_id, membership_id, character_id)\n)\n    strict;\n\ncreate index if not exists member_activities_activity_hash_director_index\n    on member_activities (activity_hash_director);\n\ncreate index if not exists member_activities_activity_hash_index\n    on member_activities (activity_hash);\n\ncreate index if not exists member_activities_character_id_index\n    on member_activities (character_id);\n\ncreate index if not exists member_activities_instance_id_index\n    on member_activities (instance_id);\n\ncreate index if not exists member_activities_membership_id_index\n    on member_activities (membership_id);\n\ncreate index if not exists member_activities_membership_id_instance_id_index\n    on member_activities (membership_id, instance_id);\n\ncreate index if not exists member_activities_mode_index\n    on member_activities (mode);\n\ncreate index if not exists member_activities_modes_index\n    on member_activities (modes);\n\ncreate index if not exists member_activities_occurred_at_index\n    on member_activities (occurred_at);\n\ncreate index if not exists member_activities_platform_played_index\n    on member_activities (platform_played);\n\ncreate index if not exists member_activities_private_index\n    on member_activities (private);\n\ncreate table if not exists member_activity_stats\n(\n    id            integer not null\n        constraint member_activity_stats_pk\n            primary key autoincrement,\n    membership_id integer not null,\n    character_id  integer not null,\n    instance_id   integer not null,\n    name          TEXT    not null,\n    value         real    not null,\n    value_display text    not null,\n    created_at    integer not null,\n    updated_at    integer not null,\n    deleted_at    integer not null,\n    constraint member_activity_stats_pk2\n        unique (membership_id, character_id, instance_id, name)\n)\n    strict;\n\ncreate index if not exists member_activity_stats_character_id_index\n    on member_activity_stats (character_id);\n\ncreate index if not exists member_activity_stats_instance_id_index\n    on member_activity_stats (instance_id);\n\ncreate index if not exists member_activity_stats_membership_id_index\n    on member_activity_stats (membership_id);\n\ncreate index if not exists member_activity_stats_membership_id_instance_id_index\n    on member_activity_stats (membership_id, instance_id);\n\ncreate index if not exists member_activity_stats_membership_id_instance_id_name_index\n    on member_activity_stats (membership_id, instance_id, name);\n\ncreate index if not exists member_activity_stats_name_index\n    on member_activity_stats (name);\n\ncreate index if not exists member_activity_stats_value_display_index\n    on member_activity_stats (value_display);\n\ncreate index if not exists member_activity_stats_value_index\n    on member_activity_stats (value);\n\ncreate table if not exists member_characters\n(\n    id                      integer not null\n        constraint member_characters_pk\n            primary key autoincrement,\n    membership_id           integer not null,\n    platform                integer not null,\n    character_id            integer not null\n        constraint member_characters_pk2\n            unique,\n    class_hash              integer not null,\n    light                   integer not null,\n    last_played_at          integer not null,\n    minutes_played_session  integer not null,\n    minutes_played_lifetime integer not null,\n    emblem_hash             integer not null,\n    emblem_url              text    not null,\n    emblem_background_url   text    not null,\n    created_at              integer not null,\n    updated_at              integer not null,\n    deleted_at              integer not null,\n    constraint member_characters_pk3\n        unique (platform, membership_id, character_id)\n)\n    strict;\n\ncreate index if not exists member_characters_character_id_index\n    on member_characters (character_id);\n\ncreate index if not exists member_characters_class_hash_index\n    on member_characters (class_hash);\n\ncreate index if not exists member_characters_emblem_background_url_index\n    on member_characters (emblem_background_url);\n\ncreate index if not exists member_characters_emblem_hash_index\n    on member_characters (emblem_hash);\n\ncreate index if not exists member_characters_emblem_url_index\n    on member_characters (emblem_url);\n\ncreate index if not exists member_characters_membership_id_index\n    on member_characters (membership_id);\n\ncreate index if not exists member_characters_platform_index\n    on member_characters (platform);\n\ncreate table if not exists member_snapshots\n(\n    id            INTEGER not null\n        constraint member_snapshots_pk\n            primary key autoincrement,\n    membership_id INTEGER not null,\n    snapshot_name TEXT    not null,\n    version       INTEGER not null,\n    data          TEXT    not null,\n    created_at    INTEGER not null,\n    updated_at    INTEGER not null,\n    deleted_at    INTEGER not null,\n    constraint member_snapshots_pk2\n        unique (snapshot_name, membership_id, version)\n)\n    strict;\n\ncreate index if not exists member_snapshots_membership_id_index\n    on member_snapshots (membership_id);\n\ncreate index if not exists member_snapshots_snapshot_name_index\n    on member_snapshots (snapshot_name);\n\ncreate index if not exists member_snapshots_version_index\n    on member_snapshots (version);\n\ncreate table if not exists member_triumphs\n(\n    id              INTEGER not null\n        constraint member_triumphs_pk\n            primary key autoincrement,\n    membership_id   INTEGER not null,\n    hash            INTEGER not null,\n    state           INTEGER not null,\n    times_completed INTEGER not null,\n    created_at      INTEGER not null,\n    updated_at      INTEGER not null,\n    deleted_at      INTEGER not null,\n    constraint member_triumphs_pk2\n        unique (membership_id, hash)\n)\n    strict;\n\ncreate index if not exists member_triumphs_hash_index\n    on member_triumphs (hash);\n\ncreate index if not exists member_triumphs_membership_id_index\n    on member_triumphs (membership_id);\n\ncreate index if not exists member_triumphs_state_index\n    on member_triumphs (state);\n\ncreate index if not exists member_triumphs_times_completed_index\n    on member_triumphs (times_completed);\n\ncreate table if not exists members\n(\n    id                     INTEGER not null\n        constraint members_pk\n            primary key autoincrement,\n    membership_id          INTEGER not null\n        constraint members_pk2\n            unique,\n    platform               INTEGER not null,\n    display_name           TEXT    not null,\n    display_name_global    TEXT    not null,\n    guardian_rank_current  INTEGER not null,\n    guardian_rank_lifetime INTEGER not null,\n    last_played_at         INTEGER not null,\n    created_at             INTEGER not null,\n    updated_at             INTEGER not null,\n    deleted_at             INTEGER not null\n)\n    strict;\n\ncreate index if not exists members_display_name_global_index\n    on members (display_name_global);\n\ncreate index if not exists members_display_name_index\n    on members (display_name);\n\ncreate index if not exists members_last_played_at_index\n    on members (last_played_at);\n\ncreate index if not exists members_platform_index\n    on members (platform);\n\ncreate table if not exists setting_modes\n(\n    id          integer not null\n        constraint setting_modes_pk\n            primary key autoincrement,\n    leaderboard integer not null,\n    dashboard   integer not null,\n    name        text    not null\n        constraint setting_modes_pk2\n            unique,\n    description text    not null,\n    value       text    not null,\n    \"order\"     integer not null,\n    created_at  integer not null,\n    updated_at  integer not null,\n    deleted_at  integer not null\n)\n    strict;\n\ncreate index if not exists setting_modes_dashboard_index\n    on setting_modes (dashboard);\n\ncreate index if not exists setting_modes_leaderboard_index\n    on setting_modes (leaderboard);\n\ncreate index if not exists setting_modes_order_index\n    on setting_modes (\"order\");\n\n\n",
  "describe": {
    "columns": [],
    "parameters": {
      "Right": 0
    },
    "nullable": []
  },
  "hash": "90f28fc0526d51aa57c7876ce93765e28f2e804acc58c88faabfa99281b33f6a"
}
