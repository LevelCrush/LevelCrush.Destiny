// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rasputin.Database.Models;

#nullable disable

namespace Rasputin.Database.Migrations
{
    [DbContext(typeof(DBDestinyContext))]
    [Migration("20241102224118_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Rasputin.Database.Models.Clan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("about");

                    b.Property<string>("CallSign")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("call_sign");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsNetwork")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_network");

                    b.Property<string>("Motto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("motto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("slug");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.HasIndex(new[] { "GroupId" }, "clans_group_id_index");

                    b.HasIndex(new[] { "IsNetwork" }, "clans_is_network_index");

                    b.HasIndex(new[] { "Name" }, "clans_name_index");

                    b.HasIndex(new[] { "Slug" }, "clans_slug_index");

                    b.ToTable("clans");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ClanMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<int>("GroupRole")
                        .HasColumnType("int")
                        .HasColumnName("group_role");

                    b.Property<long>("JoinedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("joined_at");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasColumnName("platform");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GroupId", "GroupRole", "MembershipId")
                        .IsUnique();

                    b.HasIndex(new[] { "GroupId", "GroupRole" }, "clan_members_group_id_group_role_index");

                    b.HasIndex(new[] { "GroupId" }, "clan_members_group_id_index");

                    b.HasIndex(new[] { "GroupRole" }, "clan_members_group_role_index");

                    b.HasIndex(new[] { "JoinedAt" }, "clan_members_joined_at_index");

                    b.HasIndex(new[] { "MembershipId" }, "clan_members_membership_id_index");

                    b.ToTable("clan_members");
                });

            modelBuilder.Entity("Rasputin.Database.Models.Instance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<uint>("ActivityDirectorHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("activity_director_hash");

                    b.Property<uint>("ActivityHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("activity_hash");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("completed");

                    b.Property<string>("CompletionReasons")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("completion_reasons");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("instance_id");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_private");

                    b.Property<long>("OccurredAt")
                        .HasColumnType("bigint")
                        .HasColumnName("occurred_at");

                    b.Property<bool>("StartedFromBeginning")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("started_from_beginning");

                    b.Property<int>("StartingPhaseIndex")
                        .HasColumnType("int")
                        .HasColumnName("starting_phase_index");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId")
                        .IsUnique();

                    b.HasIndex(new[] { "ActivityDirectorHash" }, "instances_activity_director_hash_index");

                    b.HasIndex(new[] { "ActivityHash" }, "instances_activity_hash_index");

                    b.HasIndex(new[] { "Completed" }, "instances_competed_index");

                    b.HasIndex(new[] { "CompletionReasons" }, "instances_completion_reasons_index");

                    b.HasIndex(new[] { "CompletionReasons", "InstanceId" }, "instances_completion_reasons_instance_id_index");

                    b.HasIndex(new[] { "InstanceId", "Completed" }, "instances_instance_id_competed_index");

                    b.HasIndex(new[] { "InstanceId" }, "instances_instance_id_index");

                    b.HasIndex(new[] { "InstanceId", "StartedFromBeginning" }, "instances_instance_id_started_from_beginning_index");

                    b.HasIndex(new[] { "IsPrivate" }, "instances_is_private_index");

                    b.HasIndex(new[] { "OccurredAt" }, "instances_occurred_at_index");

                    b.HasIndex(new[] { "StartedFromBeginning" }, "instances_started_from_beginning_index");

                    b.HasIndex(new[] { "StartingPhaseIndex" }, "instances_starting_phase_index_index");

                    b.ToTable("instances");
                });

            modelBuilder.Entity("Rasputin.Database.Models.InstanceMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint")
                        .HasColumnName("character_id");

                    b.Property<string>("ClanName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("clan_name");

                    b.Property<string>("ClanTag")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("clan_tag");

                    b.Property<uint>("ClassHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("class_hash");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("class_name");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("completed");

                    b.Property<string>("CompletionReason")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("completion_reason");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<uint>("EmblemHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("emblem_hash");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("instance_id");

                    b.Property<int>("LightLevel")
                        .HasColumnType("int")
                        .HasColumnName("light_level");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasColumnName("platform");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId", "InstanceId", "CharacterId")
                        .IsUnique();

                    b.HasIndex(new[] { "CharacterId", "Completed" }, "instance_members_character_id_completed_index");

                    b.HasIndex(new[] { "CharacterId" }, "instance_members_character_id_index");

                    b.HasIndex(new[] { "ClassHash" }, "instance_members_class_hash_index");

                    b.HasIndex(new[] { "ClassName", "Completed" }, "instance_members_class_name_completed_index");

                    b.HasIndex(new[] { "ClassName" }, "instance_members_class_name_index");

                    b.HasIndex(new[] { "Completed" }, "instance_members_completed_index");

                    b.HasIndex(new[] { "CompletionReason" }, "instance_members_completion_reason_index");

                    b.HasIndex(new[] { "EmblemHash" }, "instance_members_emblem_hash_index");

                    b.HasIndex(new[] { "InstanceId", "Completed" }, "instance_members_instance_id_completed_index");

                    b.HasIndex(new[] { "InstanceId", "Completed", "MembershipId" }, "instance_members_instance_id_completed_membership_id_index");

                    b.HasIndex(new[] { "InstanceId", "Completed", "MembershipId" }, "instance_members_instance_id_completed_membership_id_index2");

                    b.HasIndex(new[] { "InstanceId" }, "instance_members_instance_id_index");

                    b.HasIndex(new[] { "MembershipId", "Completed" }, "instance_members_membership_id_completed_index");

                    b.HasIndex(new[] { "MembershipId" }, "instance_members_membership_id_index");

                    b.HasIndex(new[] { "Platform" }, "instance_members_platform_index");

                    b.ToTable("instance_members");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ManifestActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityType")
                        .HasColumnType("bigint")
                        .HasColumnName("activity_type");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("FireteamMaxSize")
                        .HasColumnType("int")
                        .HasColumnName("fireteam_max_size");

                    b.Property<int>("FireteamMinSize")
                        .HasColumnType("int")
                        .HasColumnName("fireteam_min_size");

                    b.Property<uint>("Hash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hash");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_url");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<bool>("IsPvp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_pvp");

                    b.Property<bool>("MatchmakingEnabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("matchmaking_enabled");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int")
                        .HasColumnName("max_players");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<bool>("RequiresGuardianOath")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("requires_guardian_oath");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.HasIndex(new[] { "ActivityType" }, "manifest_activities_activity_type_index");

                    b.HasIndex(new[] { "Hash" }, "manifest_activities_hash_index");

                    b.HasIndex(new[] { "Index" }, "manifest_activities_index_index");

                    b.HasIndex(new[] { "IsPvp" }, "manifest_activities_is_pvp_index");

                    b.HasIndex(new[] { "MatchmakingEnabled" }, "manifest_activities_matchmaking_enabled_index");

                    b.HasIndex(new[] { "Name" }, "manifest_activities_name_index");

                    b.ToTable("manifest_activities");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ManifestActivityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<long>("Hash")
                        .HasColumnType("bigint")
                        .HasColumnName("hash");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("icon_url");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("manifest_activity_types");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ManifestClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<uint>("Hash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hash");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.HasIndex(new[] { "Index" }, "manifest_classes_index_index");

                    b.HasIndex(new[] { "Type" }, "manifest_classes_type_index");

                    b.ToTable("manifest_classes");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ManifestSeason", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("EndsAt")
                        .HasColumnType("bigint")
                        .HasColumnName("ends_at");

                    b.Property<uint>("Hash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<uint>("PassHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("pass_hash");

                    b.Property<long>("StartsAt")
                        .HasColumnType("bigint")
                        .HasColumnName("starts_at");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.HasIndex(new[] { "Hash" }, "manifest_seasons_hash_index");

                    b.HasIndex(new[] { "Name" }, "manifest_seasons_name_index");

                    b.HasIndex(new[] { "Number" }, "manifest_seasons_number_index");

                    b.ToTable("manifest_seasons");
                });

            modelBuilder.Entity("Rasputin.Database.Models.ManifestTriumph", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("Gilded")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("gilded");

                    b.Property<uint>("Hash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hash");

                    b.Property<bool>("IsTitle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.HasIndex(new[] { "Gilded" }, "manifest_triumphs_gilded_index");

                    b.HasIndex(new[] { "Hash" }, "manifest_triumphs_hash_index");

                    b.HasIndex(new[] { "IsTitle" }, "manifest_triumphs_is_title_index");

                    b.HasIndex(new[] { "Name" }, "manifest_triumphs_name_index");

                    b.HasIndex(new[] { "Title" }, "manifest_triumphs_title_index");

                    b.ToTable("manifest_triumphs");
                });

            modelBuilder.Entity("Rasputin.Database.Models.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("DisplayNameGlobal")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("display_name_global");

                    b.Property<int>("GuardianRankCurrent")
                        .HasColumnType("int")
                        .HasColumnName("guardian_rank_current");

                    b.Property<int>("GuardianRankLifetime")
                        .HasColumnType("int")
                        .HasColumnName("guardian_rank_lifetime");

                    b.Property<long>("LastPlayedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("last_played_at");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasColumnName("platform");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId")
                        .IsUnique();

                    b.HasIndex(new[] { "DisplayNameGlobal" }, "members_display_name_global_index");

                    b.HasIndex(new[] { "DisplayName" }, "members_display_name_index");

                    b.HasIndex(new[] { "LastPlayedAt" }, "members_last_played_at_index");

                    b.HasIndex(new[] { "Platform" }, "members_platform_index");

                    b.ToTable("members");
                });

            modelBuilder.Entity("Rasputin.Database.Models.MemberActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<uint>("ActivityHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("activity_hash");

                    b.Property<uint>("ActivityHashDirector")
                        .HasColumnType("int unsigned")
                        .HasColumnName("activity_hash_director");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint")
                        .HasColumnName("character_id");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("instance_id");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Modes")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("modes");

                    b.Property<long>("OccurredAt")
                        .HasColumnType("bigint")
                        .HasColumnName("occurred_at");

                    b.Property<int>("PlatformPlayed")
                        .HasColumnType("int")
                        .HasColumnName("platform_played");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId", "MembershipId", "CharacterId")
                        .IsUnique();

                    b.HasIndex(new[] { "ActivityHashDirector" }, "member_activities_activity_hash_director_index");

                    b.HasIndex(new[] { "ActivityHash" }, "member_activities_activity_hash_index");

                    b.HasIndex(new[] { "CharacterId" }, "member_activities_character_id_index");

                    b.HasIndex(new[] { "InstanceId" }, "member_activities_instance_id_index");

                    b.HasIndex(new[] { "MembershipId" }, "member_activities_membership_id_index");

                    b.HasIndex(new[] { "MembershipId", "InstanceId" }, "member_activities_membership_id_instance_id_index");

                    b.HasIndex(new[] { "Mode" }, "member_activities_mode_index");

                    b.HasIndex(new[] { "Modes" }, "member_activities_modes_index");

                    b.HasIndex(new[] { "OccurredAt" }, "member_activities_occurred_at_index");

                    b.HasIndex(new[] { "PlatformPlayed" }, "member_activities_platform_played_index");

                    b.HasIndex(new[] { "Private" }, "member_activities_private_index");

                    b.ToTable("member_activities");
                });

            modelBuilder.Entity("Rasputin.Database.Models.MemberActivityStat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint")
                        .HasColumnName("character_id");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("instance_id");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.Property<double>("Value")
                        .HasColumnType("double")
                        .HasColumnName("value");

                    b.Property<string>("ValueDisplay")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("value_display");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId", "CharacterId", "InstanceId", "Name")
                        .IsUnique();

                    b.HasIndex(new[] { "CharacterId" }, "member_activity_stats_character_id_index");

                    b.HasIndex(new[] { "InstanceId" }, "member_activity_stats_instance_id_index");

                    b.HasIndex(new[] { "MembershipId" }, "member_activity_stats_membership_id_index");

                    b.HasIndex(new[] { "MembershipId", "InstanceId" }, "member_activity_stats_membership_id_instance_id_index");

                    b.HasIndex(new[] { "MembershipId", "InstanceId", "Name" }, "member_activity_stats_membership_id_instance_id_name_index");

                    b.HasIndex(new[] { "Name" }, "member_activity_stats_name_index");

                    b.HasIndex(new[] { "ValueDisplay" }, "member_activity_stats_value_display_index");

                    b.HasIndex(new[] { "Value" }, "member_activity_stats_value_index");

                    b.ToTable("member_activity_stats");
                });

            modelBuilder.Entity("Rasputin.Database.Models.MemberCharacter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint")
                        .HasColumnName("character_id");

                    b.Property<uint>("ClassHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("class_hash");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<string>("EmblemBackgroundUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("emblem_background_url");

                    b.Property<uint>("EmblemHash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("emblem_hash");

                    b.Property<string>("EmblemUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("emblem_url");

                    b.Property<long>("LastPlayedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("last_played_at");

                    b.Property<int>("Light")
                        .HasColumnType("int")
                        .HasColumnName("light");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("MinutesPlayedLifetime")
                        .HasColumnType("int")
                        .HasColumnName("minutes_played_lifetime");

                    b.Property<int>("MinutesPlayedSession")
                        .HasColumnType("int")
                        .HasColumnName("minutes_played_session");

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasColumnName("platform");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("Platform", "MembershipId", "CharacterId")
                        .IsUnique();

                    b.HasIndex(new[] { "CharacterId" }, "member_characters_character_id_index");

                    b.HasIndex(new[] { "ClassHash" }, "member_characters_class_hash_index");

                    b.HasIndex(new[] { "EmblemBackgroundUrl" }, "member_characters_emblem_background_url_index");

                    b.HasIndex(new[] { "EmblemHash" }, "member_characters_emblem_hash_index");

                    b.HasIndex(new[] { "EmblemUrl" }, "member_characters_emblem_url_index");

                    b.HasIndex(new[] { "MembershipId" }, "member_characters_membership_id_index");

                    b.HasIndex(new[] { "Platform" }, "member_characters_platform_index");

                    b.ToTable("member_characters");
                });

            modelBuilder.Entity("Rasputin.Database.Models.MemberTriumph", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<uint>("Hash")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hash");

                    b.Property<long>("MembershipId")
                        .HasColumnType("bigint")
                        .HasColumnName("membership_id");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<int>("TimesCompleted")
                        .HasColumnType("int")
                        .HasColumnName("times_completed");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId", "Hash")
                        .IsUnique();

                    b.HasIndex(new[] { "Hash" }, "member_triumphs_hash_index");

                    b.HasIndex(new[] { "MembershipId" }, "member_triumphs_membership_id_index");

                    b.HasIndex(new[] { "State" }, "member_triumphs_state_index");

                    b.HasIndex(new[] { "TimesCompleted" }, "member_triumphs_times_completed_index");

                    b.ToTable("member_triumphs");
                });
#pragma warning restore 612, 618
        }
    }
}
